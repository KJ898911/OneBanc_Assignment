THREE.FBXLoader=(function(){var b;var m;var c;function v(A){THREE.Loader.call(this,A)}v.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:v,load:function(C,D,G,E){var B=this;var F=(B.path==="")?THREE.LoaderUtils.extractUrlBase(C):B.path;var A=new THREE.FileLoader(this.manager);A.setPath(B.path);A.setResponseType("arraybuffer");A.load(C,function(H){try{D(B.parse(H,F))}catch(I){setTimeout(function(){if(E){E(I)}B.manager.itemError(C)},0)}},G,E)},parse:function(D,C){if(h(D)){b=new n().parse(D)}else{var B=i(D);if(!s(B)){throw new Error("THREE.FBXLoader: Unknown format.")}if(e(B)<7000){throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+e(B))}b=new y().parse(B)}var A=new THREE.TextureLoader(this.manager).setPath(this.resourcePath||C).setCrossOrigin(this.crossOrigin);return new d(A,this.manager).parse(b)}});function d(B,A){this.textureLoader=B;this.manager=A}d.prototype={constructor:d,parse:function(){m=this.parseConnections();var B=this.parseImages();var A=this.parseTextures(B);var D=this.parseMaterials(A);var E=this.parseDeformers();var C=new w().parse(E);this.parseScene(E,C,D);return c},parseConnections:function(){var A=new Map();if("Connections" in b){var B=b.Connections.connections;B.forEach(function(H){var D=H[0];var C=H[1];var G=H[2];if(!A.has(D)){A.set(D,{parents:[],children:[]})}var E={ID:C,relationship:G};A.get(D).parents.push(E);if(!A.has(C)){A.set(C,{parents:[],children:[]})}var F={ID:D,relationship:G};A.get(C).children.push(F)})}return A},parseImages:function(){var H={};var D={};if("Video" in b.Objects){var I=b.Objects.Video;for(var G in I){var E=I[G];var B=parseInt(G);H[B]=E.RelativeFilename||E.Filename;if("Content" in E){var F=(E.Content instanceof ArrayBuffer)&&(E.Content.byteLength>0);var J=(typeof E.Content==="string")&&(E.Content!=="");if(F||J){var C=this.parseImage(I[G]);D[E.RelativeFilename||E.Filename]=C}}}}for(var B in H){var A=H[B];if(D[A]!==undefined){H[B]=D[A]}else{H[B]=H[B].split("\\").pop()}}return H},parseImage:function(C){var B=C.Content;var F=C.RelativeFilename||C.Filename;var E=F.slice(F.lastIndexOf(".")+1).toLowerCase();var A;switch(E){case"bmp":A="image/bmp";break;case"jpg":case"jpeg":A="image/jpeg";break;case"png":A="image/png";break;case"tif":A="image/tiff";break;case"tga":if(this.manager.getHandler(".tga")===null){console.warn("FBXLoader: TGA loader not found, skipping ",F)}A="image/tga";break;default:console.warn('FBXLoader: Image type "'+E+'" is not supported.');return}if(typeof B==="string"){return"data:"+A+";base64,"+B}else{var D=new Uint8Array(B);return window.URL.createObjectURL(new Blob([D],{type:A}))}},parseTextures:function(A){var C=new Map();if("Texture" in b.Objects){var E=b.Objects.Texture;for(var D in E){var B=this.parseTexture(E[D],A);C.set(parseInt(D),B)}}return C},parseTexture:function(D,A){var F=this.loadTexture(D,A);F.ID=D.id;F.name=D.attrName;var E=D.WrapModeU;var C=D.WrapModeV;var H=E!==undefined?E.value:0;var G=C!==undefined?C.value:0;F.wrapS=H===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;F.wrapT=G===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;if("Scaling" in D){var B=D.Scaling.value;F.repeat.x=B[0];F.repeat.y=B[1]}return F},loadTexture:function(D,B){var H;var F=this.textureLoader.path;var C=m.get(D.id).children;if(C!==undefined&&C.length>0&&B[C[0].ID]!==undefined){H=B[C[0].ID];if(H.indexOf("blob:")===0||H.indexOf("data:")===0){this.textureLoader.setPath(undefined)}}var E;var G=D.FileName.slice(-3).toLowerCase();if(G==="tga"){var A=this.manager.getHandler(".tga");if(A===null){console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",D.RelativeFilename);E=new THREE.Texture()}else{E=A.load(H)}}else{if(G==="psd"){console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",D.RelativeFilename);E=new THREE.Texture()}else{E=this.textureLoader.load(H)}}this.textureLoader.setPath(F);return E},parseMaterials:function(C){var A=new Map();if("Material" in b.Objects){var E=b.Objects.Material;for(var D in E){var B=this.parseMaterial(E[D],C);if(B!==null){A.set(parseInt(D),B)}}}return A},parseMaterial:function(B,G){var A=B.id;var C=B.attrName;var E=B.ShadingModel;if(typeof E==="object"){E=E.value}if(!m.has(A)){return null}var F=this.parseParameters(B,G,A);var D;switch(E.toLowerCase()){case"phong":D=new THREE.MeshPhongMaterial();break;case"lambert":D=new THREE.MeshLambertMaterial();break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',E);D=new THREE.MeshPhongMaterial();break}D.setValues(F);D.name=C;return D},parseParameters:function(C,E,A){var D={};if(C.BumpFactor){D.bumpScale=C.BumpFactor.value}if(C.Diffuse){D.color=new THREE.Color().fromArray(C.Diffuse.value)}else{if(C.DiffuseColor&&C.DiffuseColor.type==="Color"){D.color=new THREE.Color().fromArray(C.DiffuseColor.value)}}if(C.DisplacementFactor){D.displacementScale=C.DisplacementFactor.value}if(C.Emissive){D.emissive=new THREE.Color().fromArray(C.Emissive.value)}else{if(C.EmissiveColor&&C.EmissiveColor.type==="Color"){D.emissive=new THREE.Color().fromArray(C.EmissiveColor.value)}}if(C.EmissiveFactor){D.emissiveIntensity=parseFloat(C.EmissiveFactor.value)}if(C.Opacity){D.opacity=parseFloat(C.Opacity.value)}if(D.opacity<1){D.transparent=true}if(C.ReflectionFactor){D.reflectivity=C.ReflectionFactor.value}if(C.Shininess){D.shininess=C.Shininess.value}if(C.Specular){D.specular=new THREE.Color().fromArray(C.Specular.value)}else{if(C.SpecularColor&&C.SpecularColor.type==="Color"){D.specular=new THREE.Color().fromArray(C.SpecularColor.value)}}var B=this;m.get(A).children.forEach(function(G){var F=G.relationship;switch(F){case"Bump":D.bumpMap=B.getTexture(E,G.ID);break;case"Maya|TEX_ao_map":D.aoMap=B.getTexture(E,G.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":D.map=B.getTexture(E,G.ID);D.map.encoding=THREE.sRGBEncoding;break;case"DisplacementColor":D.displacementMap=B.getTexture(E,G.ID);break;case"EmissiveColor":D.emissiveMap=B.getTexture(E,G.ID);D.emissiveMap.encoding=THREE.sRGBEncoding;break;case"NormalMap":case"Maya|TEX_normal_map":D.normalMap=B.getTexture(E,G.ID);break;case"ReflectionColor":D.envMap=B.getTexture(E,G.ID);D.envMap.mapping=THREE.EquirectangularReflectionMapping;D.envMap.encoding=THREE.sRGBEncoding;break;case"SpecularColor":D.specularMap=B.getTexture(E,G.ID);D.specularMap.encoding=THREE.sRGBEncoding;break;case"TransparentColor":D.alphaMap=B.getTexture(E,G.ID);D.transparent=true;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",F);break}});return D},getTexture:function(A,B){if("LayeredTexture" in b.Objects&&B in b.Objects.LayeredTexture){console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.");B=m.get(B).children[0].ID}return A.get(B)},parseDeformers:function(){var A={};var C={};if("Deformer" in b.Objects){var D=b.Objects.Deformer;for(var H in D){var B=D[H];var E=m.get(parseInt(H));if(B.attrType==="Skin"){var G=this.parseSkeleton(E,D);G.ID=H;if(E.parents.length>1){console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported.")}G.geometryID=E.parents[0].ID;A[H]=G}else{if(B.attrType==="BlendShape"){var F={id:H};F.rawTargets=this.parseMorphTargets(E,D);F.id=H;if(E.parents.length>1){console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported.")}C[H]=F}}}}return{skeletons:A,morphTargets:C}},parseSkeleton:function(B,C){var A=[];B.children.forEach(function(F){var D=C[F.ID];if(D.attrType!=="Cluster"){return}var E={ID:F.ID,indices:[],weights:[],transformLink:new THREE.Matrix4().fromArray(D.TransformLink.a)};if("Indexes" in D){E.indices=D.Indexes.a;E.weights=D.Weights.a}A.push(E)});return{rawBones:A,bones:[]}},parseMorphTargets:function(C,E){var D=[];for(var B=0;B<C.children.length;B++){var G=C.children[B];var A=E[G.ID];var F={name:A.attrName,initialWeight:A.DeformPercent,id:A.id,fullWeights:A.FullWeights.a};if(A.attrType!=="BlendShapeChannel"){return}F.geoID=m.get(parseInt(G.ID)).children.filter(function(H){return H.relationship===undefined})[0].ID;D.push(F)}return D},parseScene:function(D,A,C){c=new THREE.Group();var F=this.parseModels(D.skeletons,A,C);var E=b.Objects.Model;var B=this;F.forEach(function(I){var J=E[I.ID];B.setLookAtProperties(I,J);var H=m.get(I.ID).parents;H.forEach(function(K){var L=F.get(K.ID);if(L!==undefined){L.add(I)}});if(I.parent===null){c.add(I)}});this.bindSkeleton(D.skeletons,A,F);this.createAmbientLight();this.setupMorphMaterials();c.traverse(function(I){if(I.userData.transformData){if(I.parent){I.userData.transformData.parentMatrixWorld=I.parent.matrix}var H=l(I.userData.transformData);I.applyMatrix4(H)}});var G=new f().parse();if(c.children.length===1&&c.children[0].isGroup){c.children[0].animations=G;c=c.children[0]}c.animations=G},parseModels:function(C,J,I){var D=new Map();var F=b.Objects.Model;for(var H in F){var A=parseInt(H);var B=F[H];var G=m.get(A);var E=this.buildSkeleton(G,C,A,B.attrName);if(!E){switch(B.attrType){case"Camera":E=this.createCamera(G);break;case"Light":E=this.createLight(G);break;case"Mesh":E=this.createMesh(G,J,I);break;case"NurbsCurve":E=this.createCurve(G,J);break;case"LimbNode":case"Root":E=new THREE.Bone();break;case"Null":default:E=new THREE.Group();break}E.name=B.attrName?THREE.PropertyBinding.sanitizeNodeName(B.attrName):"";E.ID=A}this.getTransformData(E,B);D.set(A,E)}return D},buildSkeleton:function(C,A,E,B){var D=null;C.parents.forEach(function(G){for(var F in A){var H=A[F];H.rawBones.forEach(function(K,J){if(K.ID===G.ID){var I=D;D=new THREE.Bone();D.matrixWorld.copy(K.transformLink);D.name=B?THREE.PropertyBinding.sanitizeNodeName(B):"";D.ID=E;H.bones[J]=D;if(I!==null){D.add(I)}}})}});return D},createCamera:function(G){var F;var C;G.children.forEach(function(M){var L=b.Objects.NodeAttribute[M.ID];if(L!==undefined){C=L}});if(C===undefined){F=new THREE.Object3D()}else{var H=0;if(C.CameraProjectionType!==undefined&&C.CameraProjectionType.value===1){H=1}var K=1;if(C.NearPlane!==undefined){K=C.NearPlane.value/1000}var I=1000;if(C.FarPlane!==undefined){I=C.FarPlane.value/1000}var B=window.innerWidth;var J=window.innerHeight;if(C.AspectWidth!==undefined&&C.AspectHeight!==undefined){B=C.AspectWidth.value;J=C.AspectHeight.value}var A=B/J;var E=45;if(C.FieldOfView!==undefined){E=C.FieldOfView.value}var D=C.FocalLength?C.FocalLength.value:null;switch(H){case 0:F=new THREE.PerspectiveCamera(E,A,K,I);if(D!==null){F.setFocalLength(D)}break;case 1:F=new THREE.OrthographicCamera(-B/2,B/2,J/2,-J/2,K,I);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+H+".");F=new THREE.Object3D();break}}return F},createLight:function(I){var H;var B;I.children.forEach(function(L){var K=b.Objects.NodeAttribute[L.ID];if(K!==undefined){B=K}});if(B===undefined){H=new THREE.Object3D()}else{var J;if(B.LightType===undefined){J=0}else{J=B.LightType.value}var F=16777215;if(B.Color!==undefined){F=new THREE.Color().fromArray(B.Color.value)}var D=(B.Intensity===undefined)?1:B.Intensity.value/100;if(B.CastLightOnObject!==undefined&&B.CastLightOnObject.value===0){D=0}var A=0;if(B.FarAttenuationEnd!==undefined){if(B.EnableFarAttenuation!==undefined&&B.EnableFarAttenuation.value===0){A=0}else{A=B.FarAttenuationEnd.value}}var G=1;switch(J){case 0:H=new THREE.PointLight(F,D,A,G);break;case 1:H=new THREE.DirectionalLight(F,D);break;case 2:var C=Math.PI/3;if(B.InnerAngle!==undefined){C=THREE.MathUtils.degToRad(B.InnerAngle.value)}var E=0;if(B.OuterAngle!==undefined){E=THREE.MathUtils.degToRad(B.OuterAngle.value);E=Math.max(E,1)}H=new THREE.SpotLight(F,D,A,C,E,G);break;default:console.warn("THREE.FBXLoader: Unknown light type "+B.LightType.value+", defaulting to a THREE.PointLight.");H=new THREE.PointLight(F,D);break}if(B.CastShadows!==undefined&&B.CastShadows.value===1){H.castShadow=true}}return H},createMesh:function(E,B,C){var D;var G=null;var F=null;var A=[];E.children.forEach(function(H){if(B.has(H.ID)){G=B.get(H.ID)}if(C.has(H.ID)){A.push(C.get(H.ID))}});if(A.length>1){F=A}else{if(A.length>0){F=A[0]}else{F=new THREE.MeshPhongMaterial({color:13421772});A.push(F)}}if("color" in G.attributes){A.forEach(function(H){H.vertexColors=true})}if(G.FBX_Deformer){A.forEach(function(H){H.skinning=true});D=new THREE.SkinnedMesh(G,F);D.normalizeSkinWeights()}else{D=new THREE.Mesh(G,F)}return D},createCurve:function(B,A){var D=B.children.reduce(function(E,F){if(A.has(F.ID)){E=A.get(F.ID)}return E},null);var C=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(D,C)},getTransformData:function(A,B){var C={};if("InheritType" in B){C.inheritType=parseInt(B.InheritType.value)}if("RotationOrder" in B){C.eulerOrder=t(B.RotationOrder.value)}else{C.eulerOrder="ZYX"}if("Lcl_Translation" in B){C.translation=B.Lcl_Translation.value}if("PreRotation" in B){C.preRotation=B.PreRotation.value}if("Lcl_Rotation" in B){C.rotation=B.Lcl_Rotation.value}if("PostRotation" in B){C.postRotation=B.PostRotation.value}if("Lcl_Scaling" in B){C.scale=B.Lcl_Scaling.value}if("ScalingOffset" in B){C.scalingOffset=B.ScalingOffset.value}if("ScalingPivot" in B){C.scalingPivot=B.ScalingPivot.value}if("RotationOffset" in B){C.rotationOffset=B.RotationOffset.value}if("RotationPivot" in B){C.rotationPivot=B.RotationPivot.value}A.userData.transformData=C},setLookAtProperties:function(A,C){if("LookAtProperty" in C){var B=m.get(A.ID).children;B.forEach(function(F){if(F.relationship==="LookAtProperty"){var D=b.Objects.Model[F.ID];if("Lcl_Translation" in D){var E=D.Lcl_Translation.value;if(A.target!==undefined){A.target.position.fromArray(E);c.add(A.target)}else{A.lookAt(new THREE.Vector3().fromArray(E))}}}})}},bindSkeleton:function(C,B,G){var E=this.parsePoseNodes();for(var A in C){var F=C[A];var D=m.get(parseInt(F.ID)).parents;D.forEach(function(J){if(B.has(J.ID)){var I=J.ID;var H=m.get(I);H.parents.forEach(function(L){if(G.has(L.ID)){var K=G.get(L.ID);K.bind(new THREE.Skeleton(F.bones),E[L.ID])}})}})}},parsePoseNodes:function(){var C={};if("Pose" in b.Objects){var A=b.Objects.Pose;for(var D in A){if(A[D].attrType==="BindPose"){var B=A[D].PoseNode;if(Array.isArray(B)){B.forEach(function(E){C[E.Node]=new THREE.Matrix4().fromArray(E.Matrix.a)})}else{C[B.Node]=new THREE.Matrix4().fromArray(B.Matrix.a)}}}}return C},createAmbientLight:function(){if("GlobalSettings" in b&&"AmbientColor" in b.GlobalSettings){var C=b.GlobalSettings.AmbientColor.value;var E=C[0];var D=C[1];var A=C[2];if(E!==0||D!==0||A!==0){var B=new THREE.Color(E,D,A);c.add(new THREE.AmbientLight(B,1))}}},setupMorphMaterials:function(){var A=this;c.traverse(function(B){if(B.isMesh){if(B.geometry.morphAttributes.position&&B.geometry.morphAttributes.position.length){if(Array.isArray(B.material)){B.material.forEach(function(D,C){A.setupMorphMaterial(B,D,C)})}else{A.setupMorphMaterial(B,B.material)}}}})},setupMorphMaterial:function(G,C,A){var B=G.uuid;var E=C.uuid;var F=false;c.traverse(function(H){if(H.isMesh){if(Array.isArray(H.material)){H.material.forEach(function(I){if(I.uuid===E&&H.uuid!==B){F=true}})}else{if(H.material.uuid===E&&H.uuid!==B){F=true}}}});if(F===true){var D=C.clone();D.morphTargets=true;if(A===undefined){G.material=D}else{G.material[A]=D}}else{C.morphTargets=true}}};function w(){}w.prototype={constructor:w,parse:function(D){var A=new Map();if("Geometry" in b.Objects){var B=b.Objects.Geometry;for(var F in B){var C=m.get(parseInt(F));var E=this.parseGeometry(C,B[F],D);A.set(parseInt(F),E)}}return A},parseGeometry:function(B,A,C){switch(A.attrType){case"Mesh":return this.parseMeshGeometry(B,A,C);break;case"NurbsCurve":return this.parseNurbsGeometry(A);break}},parseMeshGeometry:function(H,I,F){var E=F.skeletons;var C=[];var G=H.parents.map(function(K){return b.Objects.Model[K.ID]});if(G.length===0){return}var D=H.children.reduce(function(K,L){if(E[L.ID]!==undefined){K=E[L.ID]}return K},null);H.children.forEach(function(K){if(F.morphTargets[K.ID]!==undefined){C.push(F.morphTargets[K.ID])}});var J=G[0];var A={};if("RotationOrder" in J){A.eulerOrder=t(J.RotationOrder.value)}if("InheritType" in J){A.inheritType=parseInt(J.InheritType.value)}if("GeometricTranslation" in J){A.translation=J.GeometricTranslation.value}if("GeometricRotation" in J){A.rotation=J.GeometricRotation.value}if("GeometricScaling" in J){A.scale=J.GeometricScaling.value}var B=l(A);return this.genGeometry(I,D,C,B)},genGeometry:function(K,F,C,B){var G=new THREE.BufferGeometry();if(K.attrName){G.name=K.attrName}var J=this.parseGeoNode(K,F);var N=this.genBuffers(J);var I=new THREE.Float32BufferAttribute(N.vertex,3);I.applyMatrix4(B);G.setAttribute("position",I);if(N.colors.length>0){G.setAttribute("color",new THREE.Float32BufferAttribute(N.colors,3))}if(F){G.setAttribute("skinIndex",new THREE.Uint16BufferAttribute(N.weightsIndices,4));G.setAttribute("skinWeight",new THREE.Float32BufferAttribute(N.vertexWeights,4));G.FBX_Deformer=F}if(N.normal.length>0){var D=new THREE.Matrix3().getNormalMatrix(B);var E=new THREE.Float32BufferAttribute(N.normal,3);E.applyNormalMatrix(D);G.setAttribute("normal",E)}N.uvs.forEach(function(O,Q){var P="uv"+(Q+1).toString();if(Q===0){P="uv"}G.setAttribute(P,new THREE.Float32BufferAttribute(N.uvs[Q],2))});if(J.material&&J.material.mappingType!=="AllSame"){var A=N.materialIndex[0];var M=0;N.materialIndex.forEach(function(O,P){if(O!==A){G.addGroup(M,P-M,A);A=O;M=P}});if(G.groups.length>0){var L=G.groups[G.groups.length-1];var H=L.start+L.count;if(H!==N.materialIndex.length){G.addGroup(H,N.materialIndex.length-H,A)}}if(G.groups.length===0){G.addGroup(0,N.materialIndex.length,N.materialIndex[0])}}this.addMorphTargets(G,K,C,B);return G},parseGeoNode:function(A,D){var C={};C.vertexPositions=(A.Vertices!==undefined)?A.Vertices.a:[];C.vertexIndices=(A.PolygonVertexIndex!==undefined)?A.PolygonVertexIndex.a:[];if(A.LayerElementColor){C.color=this.parseVertexColors(A.LayerElementColor[0])}if(A.LayerElementMaterial){C.material=this.parseMaterialIndices(A.LayerElementMaterial[0])}if(A.LayerElementNormal){C.normal=this.parseNormals(A.LayerElementNormal[0])}if(A.LayerElementUV){C.uv=[];var B=0;while(A.LayerElementUV[B]){C.uv.push(this.parseUVs(A.LayerElementUV[B]));B++}}C.weightTable={};if(D!==null){C.skeleton=D;D.rawBones.forEach(function(F,E){F.indices.forEach(function(H,G){if(C.weightTable[H]===undefined){C.weightTable[H]=[]}C.weightTable[H].push({id:E,weight:F.weights[G]})})})}return C},genBuffers:function(E){var L={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};var H=0;var C=0;var G=false;var I=[];var D=[];var A=[];var F=[];var B=[];var J=[];var K=this;E.vertexIndices.forEach(function(M,V){var P=false;if(M<0){M=M^-1;P=true}var Q=[];var S=[];I.push(M*3,M*3+1,M*3+2);if(E.color){var O=k(V,H,M,E.color);A.push(O[0],O[1],O[2])}if(E.skeleton){if(E.weightTable[M]!==undefined){E.weightTable[M].forEach(function(W){S.push(W.weight);Q.push(W.id)})}if(S.length>4){if(!G){console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.");G=true}var U=[0,0,0,0];var R=[0,0,0,0];S.forEach(function(Z,X){var Y=Z;var W=Q[X];R.forEach(function(ab,aa,ad){if(Y>ab){ad[aa]=Y;Y=ab;var ac=U[aa];U[aa]=W;W=ac}})});Q=U;S=R}while(S.length<4){S.push(0);Q.push(0)}for(var N=0;N<4;++N){B.push(S[N]);J.push(Q[N])}}if(E.normal){var O=k(V,H,M,E.normal);D.push(O[0],O[1],O[2])}if(E.material&&E.material.mappingType!=="AllSame"){var T=k(V,H,M,E.material)[0]}if(E.uv){E.uv.forEach(function(X,W){var Y=k(V,H,M,X);if(F[W]===undefined){F[W]=[]}F[W].push(Y[0]);F[W].push(Y[1])})}C++;if(P){K.genFace(L,E,I,T,D,A,F,B,J,C);H++;C=0;I=[];D=[];A=[];F=[];B=[];J=[]}});return L},genFace:function(K,F,H,J,E,A,G,B,I,C){for(var D=2;D<C;D++){K.vertex.push(F.vertexPositions[H[0]]);K.vertex.push(F.vertexPositions[H[1]]);K.vertex.push(F.vertexPositions[H[2]]);K.vertex.push(F.vertexPositions[H[(D-1)*3]]);K.vertex.push(F.vertexPositions[H[(D-1)*3+1]]);K.vertex.push(F.vertexPositions[H[(D-1)*3+2]]);K.vertex.push(F.vertexPositions[H[D*3]]);K.vertex.push(F.vertexPositions[H[D*3+1]]);K.vertex.push(F.vertexPositions[H[D*3+2]]);if(F.skeleton){K.vertexWeights.push(B[0]);K.vertexWeights.push(B[1]);K.vertexWeights.push(B[2]);K.vertexWeights.push(B[3]);K.vertexWeights.push(B[(D-1)*4]);K.vertexWeights.push(B[(D-1)*4+1]);K.vertexWeights.push(B[(D-1)*4+2]);K.vertexWeights.push(B[(D-1)*4+3]);K.vertexWeights.push(B[D*4]);K.vertexWeights.push(B[D*4+1]);K.vertexWeights.push(B[D*4+2]);K.vertexWeights.push(B[D*4+3]);K.weightsIndices.push(I[0]);K.weightsIndices.push(I[1]);K.weightsIndices.push(I[2]);K.weightsIndices.push(I[3]);K.weightsIndices.push(I[(D-1)*4]);K.weightsIndices.push(I[(D-1)*4+1]);K.weightsIndices.push(I[(D-1)*4+2]);K.weightsIndices.push(I[(D-1)*4+3]);K.weightsIndices.push(I[D*4]);K.weightsIndices.push(I[D*4+1]);K.weightsIndices.push(I[D*4+2]);K.weightsIndices.push(I[D*4+3])}if(F.color){K.colors.push(A[0]);K.colors.push(A[1]);K.colors.push(A[2]);K.colors.push(A[(D-1)*3]);K.colors.push(A[(D-1)*3+1]);K.colors.push(A[(D-1)*3+2]);K.colors.push(A[D*3]);K.colors.push(A[D*3+1]);K.colors.push(A[D*3+2])}if(F.material&&F.material.mappingType!=="AllSame"){K.materialIndex.push(J);K.materialIndex.push(J);K.materialIndex.push(J)}if(F.normal){K.normal.push(E[0]);K.normal.push(E[1]);K.normal.push(E[2]);K.normal.push(E[(D-1)*3]);K.normal.push(E[(D-1)*3+1]);K.normal.push(E[(D-1)*3+2]);K.normal.push(E[D*3]);K.normal.push(E[D*3+1]);K.normal.push(E[D*3+2])}if(F.uv){F.uv.forEach(function(M,L){if(K.uvs[L]===undefined){K.uvs[L]=[]}K.uvs[L].push(G[L][0]);K.uvs[L].push(G[L][1]);K.uvs[L].push(G[L][(D-1)*2]);K.uvs[L].push(G[L][(D-1)*2+1]);K.uvs[L].push(G[L][D*2]);K.uvs[L].push(G[L][D*2+1])})}}},addMorphTargets:function(E,A,D,C){if(D.length===0){return}E.morphTargetsRelative=true;E.morphAttributes.position=[];var B=this;D.forEach(function(F){F.rawTargets.forEach(function(H){var G=b.Objects.Geometry[H.geoID];if(G!==undefined){B.genMorphGeometry(E,A,G,C,H.name)}})})},genMorphGeometry:function(E,G,K,C,A){var F=(G.PolygonVertexIndex!==undefined)?G.PolygonVertexIndex.a:[];var O=(K.Vertices!==undefined)?K.Vertices.a:[];var N=(K.Indexes!==undefined)?K.Indexes.a:[];var B=E.attributes.position.count*3;var M=new Float32Array(B);for(var H=0;H<N.length;H++){var D=N[H]*3;M[D]=O[H*3];M[D+1]=O[H*3+1];M[D+2]=O[H*3+2]}var J={vertexIndices:F,vertexPositions:M};var L=this.genBuffers(J);var I=new THREE.Float32BufferAttribute(L.vertex,3);I.name=A||K.attrName;I.applyMatrix4(C);E.morphAttributes.position.push(I)},parseNormals:function(D){var E=D.MappingInformationType;var B=D.ReferenceInformationType;var C=D.Normals.a;var A=[];if(B==="IndexToDirect"){if("NormalIndex" in D){A=D.NormalIndex.a}else{if("NormalsIndex" in D){A=D.NormalsIndex.a}}}return{dataSize:3,buffer:C,indices:A,mappingType:E,referenceType:B}},parseUVs:function(D){var E=D.MappingInformationType;var B=D.ReferenceInformationType;var C=D.UV.a;var A=[];if(B==="IndexToDirect"){A=D.UVIndex.a}return{dataSize:2,buffer:C,indices:A,mappingType:E,referenceType:B}},parseVertexColors:function(D){var E=D.MappingInformationType;var B=D.ReferenceInformationType;var C=D.Colors.a;var A=[];if(B==="IndexToDirect"){A=D.ColorIndex.a}return{dataSize:4,buffer:C,indices:A,mappingType:E,referenceType:B}},parseMaterialIndices:function(C){var F=C.MappingInformationType;var A=C.ReferenceInformationType;if(F==="NoMappingInformation"){return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:A}}var E=C.Materials.a;var B=[];for(var D=0;D<E.length;++D){B.push(D)}return{dataSize:1,buffer:E,indices:B,mappingType:F,referenceType:A}},parseNurbsGeometry:function(K){if(THREE.NURBSCurve===undefined){console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.");return new THREE.BufferGeometry()}var C=parseInt(K.Order);if(isNaN(C)){console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",K.Order,K.id);return new THREE.BufferGeometry()}var D=C-1;var M=K.KnotVector.a;var N=[];var H=K.Points.a;for(var G=0,E=H.length;G<E;G+=4){N.push(new THREE.Vector4().fromArray(H,G))}var B,J;if(K.Form==="Closed"){N.push(N[0])}else{if(K.Form==="Periodic"){B=D;J=M.length-1-B;for(var G=0;G<D;++G){N.push(N[G])}}}var A=new THREE.NURBSCurve(D,M,N,B,J);var I=A.getPoints(N.length*7);var F=new Float32Array(I.length*3);I.forEach(function(P,O){P.toArray(F,O*3)});var L=new THREE.BufferGeometry();L.setAttribute("position",new THREE.BufferAttribute(F,3));return L}};function f(){}f.prototype={constructor:f,parse:function(){var B=[];var A=this.parseClips();if(A!==undefined){for(var C in A){var E=A[C];var D=this.addClip(E);B.push(D)}}return B},parseClips:function(){if(b.Objects.AnimationCurve===undefined){return undefined}var C=this.parseAnimationCurveNodes();this.parseAnimationCurves(C);var B=this.parseAnimationLayers(C);var A=this.parseAnimStacks(B);return A},parseAnimationCurveNodes:function(){var D=b.Objects.AnimationCurveNode;var B=new Map();for(var C in D){var E=D[C];if(E.attrName.match(/S|R|T|DeformPercent/)!==null){var A={id:E.id,attr:E.attrName,curves:{}};B.set(A.id,A)}}return B},parseAnimationCurves:function(A){var F=b.Objects.AnimationCurve;for(var E in F){var G={id:F[E].id,times:F[E].KeyTime.a.map(a),values:F[E].KeyValueFloat.a};var B=m.get(G.id);if(B!==undefined){var D=B.parents[0].ID;var C=B.parents[0].relationship;if(C.match(/X/)){A.get(D).curves.x=G}else{if(C.match(/Y/)){A.get(D).curves.y=G}else{if(C.match(/Z/)){A.get(D).curves.z=G}else{if(C.match(/d|DeformPercent/)&&A.has(D)){A.get(D).curves.morph=G}}}}}}},parseAnimationLayers:function(C){var G=b.Objects.AnimationLayer;var B=new Map();for(var F in G){var E=[];var A=m.get(parseInt(F));if(A!==undefined){var D=A.children;D.forEach(function(H,M){if(C.has(H.ID)){var O=C.get(H.ID);if(O.curves.x!==undefined||O.curves.y!==undefined||O.curves.z!==undefined){if(E[M]===undefined){var I=m.get(H.ID).parents.filter(function(Q){return Q.relationship!==undefined})[0].ID;if(I!==undefined){var P=b.Objects.Model[I.toString()];var J={modelName:P.attrName?THREE.PropertyBinding.sanitizeNodeName(P.attrName):"",ID:P.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};c.traverse(function(Q){if(Q.ID===P.id){J.transform=Q.matrix;if(Q.userData.transformData){J.eulerOrder=Q.userData.transformData.eulerOrder}}});if(!J.transform){J.transform=new THREE.Matrix4()}if("PreRotation" in P){J.preRotation=P.PreRotation.value}if("PostRotation" in P){J.postRotation=P.PostRotation.value}E[M]=J}}if(E[M]){E[M][O.attr]=O}}else{if(O.curves.morph!==undefined){if(E[M]===undefined){var L=m.get(H.ID).parents.filter(function(Q){return Q.relationship!==undefined})[0].ID;var K=m.get(L).parents[0].ID;var N=m.get(K).parents[0].ID;var I=m.get(N).parents[0].ID;var P=b.Objects.Model[I];var J={modelName:P.attrName?THREE.PropertyBinding.sanitizeNodeName(P.attrName):"",morphName:b.Objects.Deformer[L].attrName};E[M]=J}E[M][O.attr]=O}}}});B.set(parseInt(F),E)}}return B},parseAnimStacks:function(B){var E=b.Objects.AnimationStack;var A={};for(var F in E){var D=m.get(parseInt(F)).children;if(D.length>1){console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.")}var C=B.get(D[0].ID);A[F]={name:E[F].attrName,layer:C}}return A},addClip:function(C){var B=[];var A=this;C.layer.forEach(function(D){B=B.concat(A.generateTracks(D))});return new THREE.AnimationClip(C.name,-1,B)},generateTracks:function(D){var G=[];var C=new THREE.Vector3();var H=new THREE.Quaternion();var E=new THREE.Vector3();if(D.transform){D.transform.decompose(C,H,E)}C=C.toArray();H=new THREE.Euler().setFromQuaternion(H,D.eulerOrder).toArray();E=E.toArray();if(D.T!==undefined&&Object.keys(D.T.curves).length>0){var B=this.generateVectorTrack(D.modelName,D.T.curves,C,"position");if(B!==undefined){G.push(B)}}if(D.R!==undefined&&Object.keys(D.R.curves).length>0){var F=this.generateRotationTrack(D.modelName,D.R.curves,H,D.preRotation,D.postRotation,D.eulerOrder);if(F!==undefined){G.push(F)}}if(D.S!==undefined&&Object.keys(D.S.curves).length>0){var A=this.generateVectorTrack(D.modelName,D.S.curves,E,"scale");if(A!==undefined){G.push(A)}}if(D.DeformPercent!==undefined){var I=this.generateMorphTrack(D);if(I!==undefined){G.push(I)}}return G},generateVectorTrack:function(B,F,A,D){var E=this.getTimesForAllAxes(F);var C=this.getKeyframeTrackValues(E,F,A);return new THREE.VectorKeyframeTrack(B+"."+D,E,C)},generateRotationTrack:function(G,L,J,K,C,F){if(L.x!==undefined){this.interpolateRotations(L.x);L.x.values=L.x.values.map(THREE.MathUtils.degToRad)}if(L.y!==undefined){this.interpolateRotations(L.y);L.y.values=L.y.values.map(THREE.MathUtils.degToRad)}if(L.z!==undefined){this.interpolateRotations(L.z);L.z.values=L.z.values.map(THREE.MathUtils.degToRad)}var B=this.getTimesForAllAxes(L);var I=this.getKeyframeTrackValues(B,L,J);if(K!==undefined){K=K.map(THREE.MathUtils.degToRad);K.push(F);K=new THREE.Euler().fromArray(K);K=new THREE.Quaternion().setFromEuler(K)}if(C!==undefined){C=C.map(THREE.MathUtils.degToRad);C.push(F);C=new THREE.Euler().fromArray(C);C=new THREE.Quaternion().setFromEuler(C).inverse()}var E=new THREE.Quaternion();var A=new THREE.Euler();var H=[];for(var D=0;D<I.length;D+=3){A.set(I[D],I[D+1],I[D+2],F);E.setFromEuler(A);if(K!==undefined){E.premultiply(K)}if(C!==undefined){E.multiply(C)}E.toArray(H,(D/3)*4)}return new THREE.QuaternionKeyframeTrack(G+".quaternion",B,H)},generateMorphTrack:function(C){var D=C.DeformPercent.curves.morph;var B=D.values.map(function(E){return E/100});var A=c.getObjectByName(C.modelName).morphTargetDictionary[C.morphName];return new THREE.NumberKeyframeTrack(C.modelName+".morphTargetInfluences["+A+"]",D.times,B)},getTimesForAllAxes:function(B){var A=[];if(B.x!==undefined){A=A.concat(B.x.times)}if(B.y!==undefined){A=A.concat(B.y.times)}if(B.z!==undefined){A=A.concat(B.z.times)}A=A.sort(function(D,C){return D-C}).filter(function(D,C,E){return E.indexOf(D)==C});return A},getKeyframeTrackValues:function(G,F,B){var E=B;var D=[];var C=-1;var A=-1;var H=-1;G.forEach(function(L){if(F.x){C=F.x.times.indexOf(L)}if(F.y){A=F.y.times.indexOf(L)}if(F.z){H=F.z.times.indexOf(L)}if(C!==-1){var K=F.x.values[C];D.push(K);E[0]=K}else{D.push(E[0])}if(A!==-1){var J=F.y.values[A];D.push(J);E[1]=J}else{D.push(E[1])}if(H!==-1){var I=F.z.values[H];D.push(I);E[2]=I}else{D.push(E[2])}});return D},interpolateRotations:function(D){for(var G=1;G<D.values.length;G++){var M=D.values[G-1];var H=D.values[G]-M;var I=Math.abs(H);if(I>=180){var J=I/180;var E=H/J;var K=M+E;var C=D.times[G-1];var A=D.times[G]-C;var B=A/J;var F=C+B;var L=[];var N=[];while(F<D.times[G]){L.push(F);F+=B;N.push(K);K+=E}D.times=o(D.times,G,L);D.values=o(D.values,G,N)}}}};function y(){}y.prototype={constructor:y,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(A){this.nodeStack.push(A);this.currentIndent+=1},popStack:function(){this.nodeStack.pop();this.currentIndent-=1},setCurrentProp:function(B,A){this.currentProp=B;this.currentPropName=A},parse:function(C){this.currentIndent=0;this.allNodes=new j();this.nodeStack=[];this.currentProp=[];this.currentPropName="";var A=this;var B=C.split(/[\r\n]+/);B.forEach(function(D,G){var J=D.match(/^[\s\t]*;/);var F=D.match(/^[\s\t]*$/);if(J||F){return}var I=D.match("^\\t{"+A.currentIndent+"}(\\w+):(.*){","");var H=D.match("^\\t{"+(A.currentIndent)+"}(\\w+):[\\s\\t\\r\\n](.*)");var E=D.match("^\\t{"+(A.currentIndent-1)+"}}");if(I){A.parseNodeBegin(D,I)}else{if(H){A.parseNodeProperty(D,H,B[++G])}else{if(E){A.popStack()}else{if(D.match(/^[^\s\t}]/)){A.parseNodePropertyContinued(D)}}}}});return this.allNodes},parseNodeBegin:function(A,E){var G=E[1].trim().replace(/^"/,"").replace(/"$/,"");var F=E[2].split(",").map(function(H){return H.trim().replace(/^"/,"").replace(/"$/,"")});var D={name:G};var B=this.parseNodeAttr(F);var C=this.getCurrentNode();if(this.currentIndent===0){this.allNodes.add(G,D)}else{if(G in C){if(G==="PoseNode"){C.PoseNode.push(D)}else{if(C[G].id!==undefined){C[G]={};C[G][C[G].id]=C[G]}}if(B.id!==""){C[G][B.id]=D}}else{if(typeof B.id==="number"){C[G]={};C[G][B.id]=D}else{if(G!=="Properties70"){if(G==="PoseNode"){C[G]=[D]}else{C[G]=D}}}}}if(typeof B.id==="number"){D.id=B.id}if(B.name!==""){D.attrName=B.name}if(B.type!==""){D.attrType=B.type}this.pushStack(D)},parseNodeAttr:function(B){var D=B[0];if(B[0]!==""){D=parseInt(B[0]);if(isNaN(D)){D=B[0]}}var A="",C="";if(B.length>1){A=B[1].replace(/^(\w+)::/,"");C=B[2]}return{id:D,name:A,type:C}},parseNodeProperty:function(K,J,D){var F=J[1].replace(/^"/,"").replace(/"$/,"").trim();var A=J[2].replace(/^"/,"").replace(/"$/,"").trim();if(F==="Content"&&A===","){A=D.replace(/"/g,"").replace(/,$/,"").trim()}var B=this.getCurrentNode();var E=B.name;if(E==="Properties70"){this.parseNodeSpecialProperty(K,F,A);return}if(F==="C"){var G=A.split(",").slice(1);var I=parseInt(G[0]);var H=parseInt(G[1]);var C=A.split(",").slice(3);C=C.map(function(L){return L.trim().replace(/^"/,"")});F="connections";A=[I,H];u(A,C);if(B[F]===undefined){B[F]=[]}}if(F==="Node"){B.id=A}if(F in B&&Array.isArray(B[F])){B[F].push(A)}else{if(F!=="a"){B[F]=A}else{B.a=A}}this.setCurrentProp(B,F);if(F==="a"&&A.slice(-1)!==","){B.a=x(A)}},parseNodePropertyContinued:function(A){var B=this.getCurrentNode();B.a+=A;if(A.slice(-1)!==","){B.a=x(B.a)}},parseNodeSpecialProperty:function(I,E,C){var H=C.split('",').map(function(J){return J.trim().replace(/^\"/,"").replace(/\s/,"_")});var A=H[0];var D=H[1];var B=H[2];var G=H[3];var F=H[4];switch(D){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":F=parseFloat(F);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":F=x(F);break}this.getPrevNode()[A]={type:D,type2:B,flag:G,value:F};this.setCurrentProp(this.getPrevNode(),A)}};function n(){}n.prototype={constructor:n,parse:function(C){var A=new g(C);A.skip(23);var B=A.getUint32();console.log("THREE.FBXLoader: FBX binary version: "+B);var D=new j();while(!this.endOfContent(A)){var E=this.parseNode(A,B);if(E!==null){D.add(E.name,E)}}return D},endOfContent:function(A){if(A.size()%16===0){return((A.getOffset()+160+16)&~15)>=A.size()}else{return A.getOffset()+160+16>=A.size()}},parseNode:function(K,L){var F={};var N=(L>=7500)?K.getUint64():K.getUint32();var H=(L>=7500)?K.getUint64():K.getUint32();var A=(L>=7500)?K.getUint64():K.getUint32();var E=K.getUint8();var C=K.getString(E);if(N===0){return null}var B=[];for(var I=0;I<H;I++){B.push(this.parseProperty(K))}var D=B.length>0?B[0]:"";var M=B.length>1?B[1]:"";var G=B.length>2?B[2]:"";F.singleProperty=(H===1&&K.getOffset()===N)?true:false;while(N>K.getOffset()){var J=this.parseNode(K,L);if(J!==null){this.parseSubNode(C,F,J)}}F.propertyList=B;if(typeof D==="number"){F.id=D}if(M!==""){F.attrName=M}if(G!==""){F.attrType=G}if(C!==""){F.name=C}return F},parseSubNode:function(C,E,F){if(F.singleProperty===true){var J=F.propertyList[0];if(Array.isArray(J)){E[F.name]=F;F.a=J}else{E[F.name]=J}}else{if(C==="Connections"&&F.name==="C"){var H=[];F.propertyList.forEach(function(M,L){if(L!==0){H.push(M)}});if(E.connections===undefined){E.connections=[]}E.connections.push(H)}else{if(F.name==="Properties70"){var K=Object.keys(F);K.forEach(function(L){E[L]=F[L]})}else{if(C==="Properties70"&&F.name==="P"){var B=F.propertyList[0];var D=F.propertyList[1];var A=F.propertyList[2];var I=F.propertyList[3];var G;if(B.indexOf("Lcl ")===0){B=B.replace("Lcl ","Lcl_")}if(D.indexOf("Lcl ")===0){D=D.replace("Lcl ","Lcl_")}if(D==="Color"||D==="ColorRGB"||D==="Vector"||D==="Vector3D"||D.indexOf("Lcl_")===0){G=[F.propertyList[4],F.propertyList[5],F.propertyList[6]]}else{G=F.propertyList[4]}E[B]={type:D,type2:A,flag:I,value:G}}else{if(E[F.name]===undefined){if(typeof F.id==="number"){E[F.name]={};E[F.name][F.id]=F}else{E[F.name]=F}}else{if(F.name==="PoseNode"){if(!Array.isArray(E[F.name])){E[F.name]=[E[F.name]]}E[F.name].push(F)}else{if(E[F.name][F.id]===undefined){E[F.name][F.id]=F}}}}}}}},parseProperty:function(A){var D=A.getString(1);switch(D){case"C":return A.getBoolean();case"D":return A.getFloat64();case"F":return A.getFloat32();case"I":return A.getInt32();case"L":return A.getInt64();case"R":var F=A.getUint32();return A.getArrayBuffer(F);case"S":var F=A.getUint32();return A.getString(F);case"Y":return A.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var H=A.getUint32();var E=A.getUint32();var C=A.getUint32();if(E===0){switch(D){case"b":case"c":return A.getBooleanArray(H);case"d":return A.getFloat64Array(H);case"f":return A.getFloat32Array(H);case"i":return A.getInt32Array(H);case"l":return A.getInt64Array(H)}}if(typeof Zlib==="undefined"){console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js")}var G=new Zlib.Inflate(new Uint8Array(A.getArrayBuffer(C)));var B=new g(G.decompress().buffer);switch(D){case"b":case"c":return B.getBooleanArray(H);case"d":return B.getFloat64Array(H);case"f":return B.getFloat32Array(H);case"i":return B.getInt32Array(H);case"l":return B.getInt64Array(H)}default:throw new Error("THREE.FBXLoader: Unknown property type "+D)}}};function g(A,B){this.dv=new DataView(A);this.offset=0;this.littleEndian=(B!==undefined)?B:true}g.prototype={constructor:g,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(A){this.offset+=A},getBoolean:function(){return(this.getUint8()&1)===1},getBooleanArray:function(C){var A=[];for(var B=0;B<C;B++){A.push(this.getBoolean())}return A},getUint8:function(){var A=this.dv.getUint8(this.offset);this.offset+=1;return A},getInt16:function(){var A=this.dv.getInt16(this.offset,this.littleEndian);this.offset+=2;return A},getInt32:function(){var A=this.dv.getInt32(this.offset,this.littleEndian);this.offset+=4;return A},getInt32Array:function(C){var A=[];for(var B=0;B<C;B++){A.push(this.getInt32())}return A},getUint32:function(){var A=this.dv.getUint32(this.offset,this.littleEndian);this.offset+=4;return A},getInt64:function(){var A,B;if(this.littleEndian){A=this.getUint32();B=this.getUint32()}else{B=this.getUint32();A=this.getUint32()}if(B&2147483648){B=~B&4294967295;A=~A&4294967295;if(A===4294967295){B=(B+1)&4294967295}A=(A+1)&4294967295;return -(B*4294967296+A)}return B*4294967296+A},getInt64Array:function(C){var A=[];for(var B=0;B<C;B++){A.push(this.getInt64())}return A},getUint64:function(){var A,B;if(this.littleEndian){A=this.getUint32();B=this.getUint32()}else{B=this.getUint32();A=this.getUint32()}return B*4294967296+A},getFloat32:function(){var A=this.dv.getFloat32(this.offset,this.littleEndian);this.offset+=4;return A},getFloat32Array:function(C){var A=[];for(var B=0;B<C;B++){A.push(this.getFloat32())}return A},getFloat64:function(){var A=this.dv.getFloat64(this.offset,this.littleEndian);this.offset+=8;return A},getFloat64Array:function(C){var A=[];for(var B=0;B<C;B++){A.push(this.getFloat64())}return A},getArrayBuffer:function(A){var B=this.dv.buffer.slice(this.offset,this.offset+A);this.offset+=A;return B},getString:function(C){var A=[];for(var B=0;B<C;B++){A[B]=this.getUint8()}var D=A.indexOf(0);if(D>=0){A=A.slice(0,D)}return THREE.LoaderUtils.decodeText(new Uint8Array(A))}};function j(){}j.prototype={constructor:j,add:function(A,B){this[A]=B}};function h(A){var B="Kaydara FBX Binary  \0";return A.byteLength>=B.length&&B===i(A,0,B.length)}function s(F){var E=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];var D=0;function C(H){var G=F[H-1];F=F.slice(D+H);D++;return G}for(var B=0;B<E.length;++B){var A=C(1);if(A===E[B]){return false}}return true}function e(D){var B=/FBXVersion: (\d+)/;var C=D.match(B);if(C){var A=parseInt(C[1]);return A}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function a(A){return A/46186158000}var z=[];function k(E,B,C,A){var D;switch(A.mappingType){case"ByPolygonVertex":D=E;break;case"ByPolygon":D=B;break;case"ByVertice":D=C;break;case"AllSame":D=A.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+A.mappingType)}if(A.referenceType==="IndexToDirect"){D=A.indices[D]}var G=D*A.dataSize;var F=G+A.dataSize;return r(z,A.buffer,G,F)}var q=new THREE.Euler();var p=new THREE.Vector3();function l(X){var F=new THREE.Matrix4();var T=new THREE.Matrix4();var S=new THREE.Matrix4();var A=new THREE.Matrix4();var H=new THREE.Matrix4();var Z=new THREE.Matrix4();var I=new THREE.Matrix4();var K=new THREE.Matrix4();var W=new THREE.Matrix4();var Q=new THREE.Matrix4();var P=new THREE.Matrix4();var C=(X.inheritType)?X.inheritType:0;if(X.translation){F.setPosition(p.fromArray(X.translation))}if(X.preRotation){var E=X.preRotation.map(THREE.MathUtils.degToRad);E.push(X.eulerOrder);T.makeRotationFromEuler(q.fromArray(E))}if(X.rotation){var E=X.rotation.map(THREE.MathUtils.degToRad);E.push(X.eulerOrder);S.makeRotationFromEuler(q.fromArray(E))}if(X.postRotation){var E=X.postRotation.map(THREE.MathUtils.degToRad);E.push(X.eulerOrder);A.makeRotationFromEuler(q.fromArray(E))}if(X.scale){H.scale(p.fromArray(X.scale))}if(X.scalingOffset){I.setPosition(p.fromArray(X.scalingOffset))}if(X.scalingPivot){Z.setPosition(p.fromArray(X.scalingPivot))}if(X.rotationOffset){K.setPosition(p.fromArray(X.rotationOffset))}if(X.rotationPivot){W.setPosition(p.fromArray(X.rotationPivot))}if(X.parentMatrixWorld){Q=X.parentMatrixWorld}var G=T.multiply(S).multiply(A);var N=new THREE.Matrix4();Q.extractRotation(N);var J=new THREE.Matrix4();var M;var B;var D;J.copyPosition(Q);D=J.getInverse(J).multiply(Q);B=N.getInverse(N).multiply(D);M=H;var V;if(C===0){V=N.multiply(G).multiply(B).multiply(M)}else{if(C===1){V=N.multiply(B).multiply(G).multiply(M)}else{var U=new THREE.Matrix4().copy(H);var R=B.multiply(U.getInverse(U));V=N.multiply(G).multiply(R).multiply(M)}}var O=F.multiply(K).multiply(W).multiply(T).multiply(S).multiply(A).multiply(W.getInverse(W)).multiply(I).multiply(Z).multiply(H).multiply(Z.getInverse(Z));var Y=new THREE.Matrix4().copyPosition(O);var L=Q.multiply(Y);P.copyPosition(L);O=P.multiply(V);return O}function t(A){A=A||0;var B=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];if(A===6){console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.");return B[0]}return B[A]}function x(A){var B=A.split(",").map(function(C){return parseFloat(C)});return B}function i(A,C,B){if(C===undefined){C=0}if(B===undefined){B=A.byteLength}return THREE.LoaderUtils.decodeText(new Uint8Array(A,C,B))}function u(C,A){for(var E=0,D=C.length,B=A.length;E<B;E++,D++){C[D]=A[E]}}function r(B,A,F,E){for(var D=F,C=0;D<E;D++,C++){B[C]=A[D]}return B}function o(B,C,A){return B.slice(0,C).concat(A).concat(B.slice(C))}return v})();